/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int max=Integer.MAX_VALUE;
    List<Integer> list=new ArrayList<>();
    public int getMinimumDifference(TreeNode root) {
        inord(root);
        
        for(int i=0;i<list.size();i++){
            for(int j=i+1;j<list.size();j++){
                int dif=Math.abs(list.get(i)-list.get(j));
                if(dif<max){
                    max=dif;
                }
            }
        }
        return max;
        
    }
    public void inord(TreeNode root){
        if(root==null){
            return ;
        }
        inord(root.left);
        list.add(root.val);
        inord(root.right);
    }
    
}
