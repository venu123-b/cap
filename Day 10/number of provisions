class Solution {
    public int findCircleNum(int[][] isConnected) {
        List<List<Integer>> l=new ArrayList<>();
        int n=isConnected.length;
        for(int i=0;i<isConnected.length;i++){
            l.add(new ArrayList<>());
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(isConnected[i][j]==1 && i!=j){
                    l.get(i).add(j);
                    l.get(j).add(i);
                }
            }

        }
        int count=0;
        int[] v=new int[n];
        for(int i=0;i<l.size();i++){

            if(v[i]==0){
                count++;
                dfs(i,l,v);

            }
        }
        return count;
    }
    public void dfs(int i,List<List<Integer>> l,int v[]){
        v[i]=1;
        for(int ne:l.get(i)){
            if(v[ne]==0){
                dfs(ne,l,v);
            }
        }
    }
}
