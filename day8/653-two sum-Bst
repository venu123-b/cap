/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<Integer> list=new ArrayList<>();
    public boolean findTarget(TreeNode root, int k) {
        inord(root);
        if(list.size()<2){
            return false;
        }
        HashMap<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<list.size();i++){
           int t=k-list.get(i);
           if(map.containsKey(t)){
               return true;
           }
           else{
               map.put(list.get(i),i);
           }
        }
        
        return false;
        
    }
    public void inord(TreeNode root){
        if(root==null)
        {
            return ;
        }
        inord(root.left);
        list.add(root.val);
        inord(root.right);
    }
}
