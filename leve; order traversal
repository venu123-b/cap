//level order traversal
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
       
        List<List<Integer>> list1=new ArrayList<>();
        Queue<TreeNode> queue=new LinkedList<>();
        List<Integer> list2= new ArrayList<>();
         if(root==null){
            return list1;
        }
        list2.add(root.val);
        list1.add(list2);
        queue.add(root);
        while(!queue.isEmpty()){
            int size =queue.size();
            list2= new ArrayList<>();
            
            for(int i=1;i<=size;i++){
                TreeNode curr=queue.poll();
                if(curr.left!=null){
                    list2.add(curr.left.val);
                    queue.add(curr.left);

                }
                if(curr.right!=null){
                    list2.add(curr.right.val);
                    queue.add(curr.right);
                }
            }
            if(list2.size()!=0){
                list1.add(list2);
            }
            
           

        }
        return list1;

        
    }
}
